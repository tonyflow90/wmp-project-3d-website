import{S as w,i as P,s as I,e as m,c as p,a as _,d,b as y,g as h,I as S,J as $,v as k,M as A,w as T,k as j,x,m as L,f as E,y as z,N,O as R,P as B,q as C,o as M,B as J,a1 as f}from"./vendor-532580da.js";function K(l){let a,n;return{c(){a=m("div"),n=m("div"),this.h()},l(t){a=p(t,"DIV",{class:!0});var e=_(a);n=p(e,"DIV",{class:!0}),_(n).forEach(d),e.forEach(d),this.h()},h(){y(n,"class","pokeball__button svelte-1aqlxnb"),y(a,"class","pokeball svelte-1aqlxnb")},m(t,e){h(t,a,e),S(a,n)},p:$,i:$,o:$,d(t){t&&d(a)}}}function O(l){return k(()=>{}),[]}class F extends w{constructor(a){super();P(this,a,O,K,I,{})}}function G(l){let a,n,t,e,s,i;n=new F({});const u=l[1].default,o=A(u,l,l[0],null);return{c(){a=m("div"),t=m("div"),T(n.$$.fragment),e=j(),s=m("div"),o&&o.c(),this.h()},l(r){a=p(r,"DIV",{class:!0});var c=_(a);t=p(c,"DIV",{style:!0});var q=_(t);x(n.$$.fragment,q),c.forEach(d),e=L(r),s=p(r,"DIV",{});var g=_(s);o&&o.l(g),g.forEach(d),this.h()},h(){E(t,"display","contents"),E(t,"--size","100px"),y(a,"class","loading svelte-1wy6zf0")},m(r,c){h(r,a,c),S(a,t),z(n,t,null),h(r,e,c),h(r,s,c),o&&o.m(s,null),i=!0},p(r,[c]){o&&o.p&&(!i||c&1)&&N(o,u,r,r[0],i?B(u,r[0],c,null):R(r[0]),null)},i(r){i||(C(n.$$.fragment,r),C(o,r),i=!0)},o(r){M(n.$$.fragment,r),M(o,r),i=!1},d(r){r&&d(a),J(n),r&&d(e),r&&d(s),o&&o.d(r)}}}function H(l,a,n){let{$$slots:t={},$$scope:e}=a;return k(()=>{}),l.$$set=s=>{"$$scope"in s&&n(0,e=s.$$scope)},[e,t]}class ee extends w{constructor(a){super();P(this,a,H,G,I,{})}}f.configure({apiKey:"2a30334b-5d51-4afd-b7fc-c999fb16ee61"});const D=["base1","base2","basep","base3","base4","base5"];let Q=async()=>new Promise(async(l,a)=>{let n=0;await f.set.find(cardSet).then(e=>{console.log(e),n=e.printedTotal});let t=[];for(let e=1;e<n;e++){let s=`${cardSet}-${e}`;t.push(f.card.find(s))}Promise.all(t).then(e=>{l(e)}).catch(e=>{a(e)})}),U=async l=>new Promise(async(a,n)=>{let t=[];D.forEach(e=>{t.push(f.set.find(e))}),Promise.all(t).then(e=>{a(e)}).catch(e=>{n(e)})}),V=async(l=1)=>new Promise(async(a,n)=>{let t=D.sort(()=>Math.random()-Math.random()).slice(0,l),e=[];t.forEach(s=>{e.push(f.set.find(s))}),Promise.all(e).then(s=>{a(s)}).catch(s=>{n(s)})}),b=async l=>new Promise(async(a,n)=>{try{let t=await f.set.find(l);a(t)}catch(t){n(t)}}),W=async l=>new Promise(async(a,n)=>{let t=await b(l),e=[];for(let s=1;s<t.printedTotal;s++){let i=`${t.id}-${s}`;e.push(v(i))}a(e)}),X=async l=>new Promise(async(a,n)=>{let t=await b(l),e=[];for(let s=1;s<t.printedTotal;s++){let i=`${t.id}-${s}`;e.push(v(i))}Promise.all(e).then(s=>{a(s)}).catch(s=>{n(s)})}),Y=async(l=1)=>new Promise(async(a,n)=>{let t=await V(l),e=[];t.forEach(s=>{let i=Math.floor(Math.random()*s.printedTotal),u=`${s.id}-${i}`;e.push(v(u))}),a(e)}),v=async l=>new Promise(async(a,n)=>{try{let t=await f.card.find(l);a(t)}catch(t){n(t)}});var te={getAllSets:U,getSet:b,getAllCards:X,getCard:v,getAll:Q,getAllCardsp:W,getRandomSets:V,getRandomCards:Y};export{ee as L,te as p};
